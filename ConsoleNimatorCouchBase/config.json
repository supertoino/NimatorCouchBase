/* 
  This file is parsed by NewtonSoft. Normally, you cannot use comments
  in a json file, but fortunately for us NewtonSoft doesn't care by
  default so we can use it to annotate this file.

  Some interesting points:

  - You can use comments in your config files :-)
  - Generate example: Nimator.Settings.NimatorSettings.GetExample()
  - Use NewtonSoft-style "$type" hints to indicate what class you meant
  - You could equally well persist this in e.g. a file
*/
{
  "Notifiers": [
    {
      "$type": "Nimator.Settings.ConsoleSettings, Nimator",
      "Threshold": "Okay"
    }

    // [SLACK] Enter your API url and uncomment:
    //,
    //{
    //  "$type": "Nimator.Settings.SlackSettings, Nimator",
    //  "Threshold":  "Okay",
    //  "Url": "https://hooks.slack.com/services/YOUR/INTEGATION/url-goes-here",
    //  "DebounceTimeInSecs": 60
    //}

    // [OPSGENIE] Enter your API Key and Heartbeat name and uncomment:
    //,
    //{
    //  "$type": "Nimator.Settings.OpsGenieSettings, Nimator",
    //  "Threshold": "Error",
    //  "ApiKey": "your-key-here",
    //  "TeamName": "ops_team",
    //  "HeartbeatName":  "nimator"
    //}
  ],

  "Layers": [
    {
      "Name": "Demo Layer 1",
      "Checks": [
        {
          "$type": "Nimator.NoopCheckSettings, Nimator",
          "LevelToSimulate": "Okay" // Or one of: ["Warning", "Error", "Critical"]
        },
        {
          "$type": "Nimator.NoopCheckSettings, Nimator",
          "LevelToSimulate": "Warning" // Or one of: ["Warning", "Error", "Critical"]
        },
        {
          "$type": "NimatorCouchBase.CouchBase.Checkers.CheckCouchBaseGeneralAttributesSettings, NimatorCouchBase",
          "Validations": {
            "$type": "NimatorCouchBase.NimatorBooster.LRuntimeObjectValidations, NimatorCouchBase",
            "Validations": {
              "$type": "System.Collections.Generic.List`1[[NimatorCouchBase.NimatorBooster.ILRuntimeObjectValidation, NimatorCouchBase]], mscorlib",
              "$values": [
                {
                  "$type": "NimatorCouchBase.NimatorBooster.LRuntimeObjectValidation, NimatorCouchBase",
                  "NotificationLevel": 20,
                  "LValidation": "StorageTotals.Ram.Total>10"
                },
                {
                  "$type": "NimatorCouchBase.NimatorBooster.LRuntimeObjectValidation, NimatorCouchBase",
                  "NotificationLevel": 40,
                  "LValidation": "StorageTotals.Ram.Total>30"
                },
                {
                  "$type": "NimatorCouchBase.NimatorBooster.LRuntimeObjectValidation, NimatorCouchBase",
                  "NotificationLevel": 30,
                  "LValidation": "StorageTotals.Ram.Total>20"
                }
              ]
            }            
          },
          "Parameters": {
            "$type": "NimatorCouchBase.NimatorBooster.HttpCheckers.Callers.HttpCallerParameters, NimatorCouchBase",
            "HttpUrl": "http://localhost:8091/pools/default",
            "Authenticator": {
              "$type": "NimatorCouchBase.NimatorBooster.HttpCheckers.Callers.HttpAuthenticationSettings, NimatorCouchBase",
              "Username": "supertoino",
              "Password": "OcohoW*99"
            },
            "Method": 0
          }
        }
      ]
    },
    {
      "Name": "Demo Layer 2",
      "Checks": [
        {
          "$type": "Nimator.NoopCheckSettings, Nimator",
          "LevelToSimulate": "Error" // Or one of: ["Warning", "Error", "Critical"]
        }
      ]
    }
  ]
}
